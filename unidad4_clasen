import Foundation

//Declarando enumeraciones, para únicos posibles valores

enum PuntosCardinales {
    case Norte
    case Sur
    case Este
    case Oeste
}

print(PuntosCardinales.Norte)

enum Semestres {
    case primero, segundo, tercero, cuarto, quinto, sexto, septimo, octavo, limbo
}

print(Semestres.octavo)

enum AnimalZoo: Int {
    case pinguino = 1, leon = 2, cebra = 3
}

print(AnimalZoo.leon.rawValue)

// Trabajando con enums, diferentes flujos en función de un valor enumerado

enum RuedasVehiculo {
    case una, dos, tres, cuatro
}

var vehiculoNuevo: RuedasVehiculo = .dos

switch vehiculoNuevo{
case .una:
    print("Es un monociclo")
case .dos:
    print("Es una motocicleta")
case .tres:
    print("Es un triciclo")
case .cuatro:
    print("Es una troca")
}

/* Nulo en programación
    Valor especial que representa a la "nada"
    Dirección de memoria tan baja 
 */

var valorNoNulo: Int = 1

var valorNulo: Int? // Se le puede asignar un valor nulo desde aquí

valorNulo = 1

valorNulo = nil

print(valorNulo)

//Alcance de las variables en Swift

//¿Qué tal si compartimos un dato?

struct MaroonFivers {
    var nombre: String
    var edad: Int
    static var cancionFavorita = "She will be loved"
}

let superFanUno = MaroonFivers(nombre: "Cristian", edad: 23)
print(superFanUno.nombre)

print(MaroonFivers.cancionFavorita)

let superFanDos = MaroonFivers(nombre: "Arturo", edad: 21)
print(MaroonFivers.cancionFavorita)

// https://stackoverflow.com/questions/37701187/when-to-use-static-constant-and-variable-in-swift

//¿Qué tal si queremos mantener un dato aquí?

class Mascota {
    static var numero = 0
    
    init() {
        Mascota.numero += 1
    }
}

let perro = Mascota()
print(Mascota.numero)
let gato = Mascota()
print(Mascota.numero)
let hamtaro = Mascota()
print(Mascota.numero)
